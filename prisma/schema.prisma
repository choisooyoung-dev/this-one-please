generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id         Int      @id @default(autoincrement()) @map("id")
  email      String   @unique @map("email")
  password   String   @map("password")
  name       String   @map("name")
  type       Int      @map("type")
  point      Int      @default(1000000) @map("point")
  address    String   @map("address")
  created_at DateTime @default(now()) @map("created_at")
  updated_at DateTime @default(now()) @map("updated_at")

  Cart   Cart[]
  Orders Orders[]
  Stores Stores?

  @@map("Users")
}

model Categories {
  id        Int      @id @default(autoincrement()) @map("id")
  name      String   @map("name")
  created_at DateTime @default(now()) @map("created_at")
  updated_at DateTime @default(now()) @map("updated_at")

  Stores Stores[]
}

model Stores {
  id          Int      @id @default(autoincrement()) @map("id")
  user_id     Int      @map("userId") @unique
  category_id Int      @map("categoryId")
  name        String      @map("name")
  image       String   @map("imgUrl")
  address      String   @map("address")
  created_at DateTime @default(now()) @map("created_at")
  updated_at DateTime @default(now()) @map("updated_at")

  Menus    Menus[]
  Orders   Orders[]
  User     Users      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  Category Categories @relation(fields: [category_id], references: [id], onDelete: Cascade)
  Cart   Cart[]

  @@map("Stores")
}

model Menus {
  id       Int    @id @default(autoincrement()) @map("id")
  store_id Int    @map("store_id")
  name     String    @unique @map("name")
  price    Int    @map("price")
  image    String @map("imgUrl")
  Cart     Cart[]
  Stores   Stores @relation(fields: [store_id], references: [id], onDelete: Cascade)

  @@index([store_id], map: "Menus_store_id_fkey")
}

model Cart {
  id      Int @id @default(autoincrement()) @map("id")
  user_id Int @map("user_id") // 사용자(Users) 테이블을 참조하는 외래키
  store_id  Int      @map("store_id")
  menu_id Int
  count   Int
  price   Int

  // Users 테이블과 관계를 설정합니다.
  User Users @relation(fields: [user_id], references: [id], onDelete: Cascade)
  Menu Menus @relation(fields: [menu_id], references: [id], onDelete: Cascade)
  Store  Stores   @relation(fields: [store_id], references: [id], onDelete: Cascade)

  @@map("Cart")
}

model Orders {

  id        Int      @id @default(autoincrement()) @map("id")
  user_id   Int      @unique @map("user_id")
  store_id  Int      @unique @map("store_id")
  menu_ids  Json     @map("menu_ids")
  created_at DateTime @default(now()) @map("created_at")
  updated_at DateTime @default(now()) @map("updated_at")

  Review Reviews?
  User   Users    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  Store  Stores   @relation(fields: [store_id], references: [id], onDelete: Cascade)
}

model Reviews {
  id        Int      @id @default(autoincrement()) @map("id")
  order_id  Int      @unique @map("order_id")
  comment   String   @map("comment")
  star      Float    @map("star")
  created_at DateTime @default(now()) @map("created_at")
  updated_at DateTime @default(now()) @map("updated_at")

  Order Orders @relation(fields: [order_id], references: [id], onDelete: Cascade)

}
